# 2. Завдання: Система управління портфелем криптовалют
# Створіть систему управління портфелем криптовалют. У вас є клас Портфель, який
# представляє портфель криптовалютного інвестора. Кожен портфель має наступні
# атрибути:
# ● інвестор: Ім'я власника портфелю.
# ● криптовалюта: Словник, де ключами є назви криптовалют, а значеннями -
# кількість одиниць кожної криптовалюти в портфелі.
# ● котирування: Словник, де ключами є назви криптовалют, а значеннями -
# актуальна вартість одиниці криптовалюти в доларах.
# Створіть дескриптор ДолароваВартість, який дозволяє автоматично оновлювати
# вартість кожного активу в доларах на основі актуальних котирувань.
# Створіть методи у класі Портфель:
# ● додати_криптовалюту(назва, кількість): Метод для додавання криптовалюти до
# портфелю. Якщо криптовалюта вже існує в портфелі, кількість має бути
# оновлена.
# ● видалити_криптовалюту(назва): Метод для видалення криптовалюти з
# портфелю.
# ● перерахувати_доларову_вартість(): Метод, який автоматично перераховує
# доларову вартість кожного активу в портфелі, використовуючи дескриптор
# ДолароваВартість.
# ● вивести_портфель(): Метод, який виводить інформацію про портфель в
# зручному форматі, включаючи назву криптовалют, кількість одиниць кожної
# криптовалюти та їх доларову вартість.
# ● сортувати_портфель(): Метод, який сортує криптовалютні активи в портфелі за
# доларовою вартістю в спадаючому порядку.
# Створіть об'єкт класу Портфель та додайте кілька криптовалют до нього.
# Використовуйте дескриптор для автоматичного оновлення доларової вартості активів
# під час додавання або видалення криптовалют. Використайте сортування для
# виведення активів в портфелі у відсортованому за доларовою вартістю порядку.
# Правила:
# ● Використовуйте дескриптор для автоматичного оновлення доларової вартості
# криптовалютних активів.
# ● Передбачте винятки для випадків, коли криптовалюта вже існує в портфелі і
# вона додається знову, або коли спробуєте видалити криптовалюту, якої немає в
# портфелі. Ваша програма повинна бути стійкою до помилок і має обробляти їх
# належним чином. Наприклад :
# Обробка помилок при спробі додати клієнта з вже існуючим іменем.
# Обробка помилок при спробі знайти клієнта, якого немає у списку.
# Обробка помилок при спробі завантажити або зберегти дані з/у файл,
# включаючи винятки, які виникають при відсутності файлу або недійсних даних у
# файлі.
# Повідомлення про помилку повинні бути інформативними та
# користувач-дружніми.
# ● Додайте інші методи та функціональність за бажанням, наприклад, метод для
# збереження портфелю у файлі або завантаження з файлу.

class CashPrise:
    def __init__(self, symbol):
        self.symbol = symbol

    def __get__(self, instance, owner):
        return instance.quotation.get(self.symbol, 0) * instance.cryptocurrency.get(self.symbol, 0)

    def __set__(self, instance, value):
        raise AttributeError("Доларова вартість автоматично оновлюється з котирувань")

class Portfolio:
    def __init__(self, investor):
        self.investor = investor
        self.cryptocurrency = {}
        self.quotation = {}

    def Add_cryptocurrency(self, name, amount):
        if amount < 0:
            raise ValueError("Кількість криптовалюти має бути більше 0")
        self.cryptocurrency[name] = self.cryptocurrency.get(name, 0) + amount

    def del_cryptocurrency(self, name):
        if name in self.cryptocurrency:
            del self.cryptocurrency[name]
        else:
            raise ValueError(f"Криптовалюта {name} відсутня в портфелі")

    def show_portfolio(self):
        print(f"Портфель {self.investor}:")
        for name, amount in self.cryptocurrency.items():
            cash_prise = getattr(CashPrise(name), '__get__')(self, self.__class__)
            print(f"{name}: {amount} одиниць, Доларова вартість: ${cash_prise:.2f}")


if __name__ == "__main__":
    Portfolio = Portfolio("Іван")
    Portfolio.quotation = {"BTC": 45000, "ETH": 3000, "LTC": 800}

    Portfolio.Add_cryptocurrency("BTC", 2)
    Portfolio.Add_cryptocurrency("ETH", 10)
    Portfolio.Add_cryptocurrency("LTC", 5)

    Portfolio.show_portfolio()
